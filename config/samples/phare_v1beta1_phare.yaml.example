apiVersion: phare.localcorp.internal/v1beta1
kind: Phare
metadata:
  labels:
    app.kubernetes.io/name: phare
    app.kubernetes.io/created-by: operator
  name: phare-sample
spec:
  microservice:
    image:
      repository: nginx
      tag: latest
    imagePullPolicy: IfNotPresent
    kind: StatefulSet # <-- if you want to use Deployment, change to Deployment
    replicaCount: 1
    command: ["nginx", "-g", "daemon off;"]
    # volumeClaimTemplates:
    # - apiVersion: v1
    #   kind: PersistentVolumeClaim
    #   metadata: {}
    #   spec:
    #     accessModes: [ "ReadWriteOnce" ]
    #     resources:
    #       requests:
    #         storage: 1Gi
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: dedicated_to
              operator: In
              values:
              - <NODE_POOL>
          weight: 100
    tolerations:
    - effect: NoSchedule
      key: dedicated_to
      operator: Equal
      value: <NODE_POOL>
    # extraContainers:
    #   - name: extra
    #     image: busybox
    #     # command: ["sh", "-c", "echo extra"]
    #     command: ["sh", "-c", "echo extra && nslookup phare-sample && nslookup phare-sample.default && nslookup phare-sample.default.svc.clus && sleep 3600"]
    #     resources:
    #       requests:
    #         memory: "64Mi"
    #         cpu: "250m"
    #       limits:
    #         memory: "128Mi"
    #         cpu: "500m"
    resourceRequirements:
      requests:
        memory: "128Mi"
        cpu: "500m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    env:
      - name: PHARE_CONFIG
        value: /etc/phare/config.js
      - name: PHARE_CONFIG_KEY
        valueFrom:
          configMapKeyRef:
            name: phare-sample-config
            key: key
    volumes:
      - name: empty
        emptyDir: {}
      - name: secret
        secret:
          secretName: phare-sample-secret
      - name: secret-2
        secret:
          secretName: phare-sample-secret-2
    volumeMounts:
      - name: empty
        mountPath: /etc/phare
      - name: secret
        mountPath: /etc/phare-secret
      - name: secret-2
        mountPath: /etc/phare-secret-2
    initContainers:
      - name: init
        image: busybox
        command: ["sh", "-c", "echo init"]
        volumeMounts:
          - name: empty
            mountPath: /etc/phare
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
  service:
    ports:
      - name: http
        port: 80
        targetPort: 80
  toolchain:
    config:
      key: '{{ .Name }}'
      config.js: |
        module.exports = {
          key: 'value'
        }
      template.js: |
        module.exports = {
          project: {
            name: '{{ .Name }}',
            namespace: '{{ .Namespace }}',
            labels: {
              app: '{{ .Name }}',
              app_kubernetes_io_name: '{{ .Name }}',
              app_kubernetes_io_created_by: 'operator'
            }
          },
