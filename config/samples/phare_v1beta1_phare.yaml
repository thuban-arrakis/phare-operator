apiVersion: phare.localcorp.internal/v1beta1
kind: Phare
metadata:
  labels:
    app.kubernetes.io/name: phare
    app.kubernetes.io/created-by: operator
  name: phare-sample
spec:
  microservice:
    image:
      repository: nginx
      tag: latest
    imagePullPolicy: IfNotPresent
    kind: StatefulSet # <-- if you want to use Deployment, change to Deployment
    replicaCount: 1
    command: ["nginx", "-g", "daemon off;"]
    resourceRequirements:
      requests:
        memory: "128Mi"
        cpu: "500m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    env:
      - name: PHARE_CONFIG
        value: /etc/phare/config.js
      - name: PHARE_CONFIG_KEY
        valueFrom:
          configMapKeyRef:
            name: phare-sample-config
            key: key
    volumes:
      - name: empty
        emptyDir: {}
      - name: secret
        secret:
          secretName: phare-sample-secret
      - name: secret-2
        secret:
          secretName: phare-sample-secret-2
    volumeMounts:
      - name: empty
        mountPath: /etc/phare
      - name: secret
        mountPath: /etc/phare-secret
      - name: secret-2
        mountPath: /etc/phare-secret-2
    initContainers:
      - name: init
        image: busybox
        command: ["sh", "-c", "echo init"]
        volumeMounts:
          - name: empty
            mountPath: /etc/phare
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
  service:
    ports:
      - name: http
        port: 80
        targetPort: 80
  toolchain:
    config:
      key: new-value
      config.js: |
        module.exports = {
          key: 'value'
        }
